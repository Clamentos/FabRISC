final version i guess

data transfer {

	F |OPCODE(07)|MOD(02)|RD/RS1(05)|RS2(05)|IM1(13)| 					mem[rs2 + imm]
	G |OPCODE(07)|MOD(02)|RD/RS1(05)|RS2(05)|RS3(05)|IM1(08)| 			mem[rs2 + (rs3 * imm)]
	I |OPCODE(09)|MOD(03)|RD(05)|RS1(05)|RS2(05)|RS3(05)| 				mem[rs1 + (rs2 * rs3)]
}

control transfer {

	  |OPCODE(07)|MOD(02)|RS1(05)|IM1(08)|IM2(10)|
	  ...
}

000000 xxxxxxx ... 001111 xxxxxxx 		16
010000 0xxxxxx ... 101111 1xxxxxx 		64
110000 00xxxxx ... 110111 11xxxxx 		32
111000 000xxxx ... 111011 111xxxx 		32
111100 0000xxx ... 111100 1111xxx 		16
111110 00000xx ... 111110 01111xx 		16
111111 0000000 ... 111111 0111111 		64


NOTE:

    make vector reduction as separate "thing"

_______________________________________________________________________________________________________________________________

computational {

	(ALU INT & FP reg-reg-reg) {

		A |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|

		MOD(04):

			00xx -> scalar
			01xx -> vector-scalar
			10xx -> vector-vector

			1100 -> vector-scalar VLEN
            1101 -> vector-vector VLEN
            1110 -> vector-VMOD VLEN
            1111 -> scalar SLEN

			(xx is length: 8, 16, 32, 64)
	}

	(ALU INT & FP reg-reg-imm) {

		B |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|

		MOD(04):

            00xx -> scalar
            01xx -> vector-scalar
            10xx -> vector-vector

            1100 -> vector-scalar VLEN
            1101 -> vector-vector VLEN
            1110 -> vector-VMOD VLEN
            1111 -> scalar SLEN

            (xx is length: 8, 16, 32, 64)
	}

	(ALU SHIFT & SPECIAL reg-imm) {

		C |OPCODE(11)|MOD(05)|RD(05)|RS1(05)|IM1(06)|

		MOD(04):

			000xx -> scalar
			001xx -> vector-scalar

			01000 -> scalar count ones
			01001 -> scalar count zeros
			01010 -> scalar count leading ones
			01011 -> scalar count leading zeros
			01100 -> scalar count trailing ones
			01101 -> scalar count trailing zeros

			01110
			01111

			...

			(xx is length: 8, 16, 32, 64)
	}

	(ALU SPECIAL reg) {

		D |OPCODE(10)|MOD(02)|RD(05)|RS1(05)|RS2(05)|RS3(05)|

		MOD(02):

			00
			01
			10
			11
	}

	(ALU SPECIAL imm) {

		E |OPCODE(09)|MOD(02)|RD(05)|RS1(05)|RS2(05)|IMM(06)|

		MOD(02):

			00
			01
			10
			11
	}
}

data transfer {


}
_______________________________________________________________________________________________________________________________

	[A] (...) Addition--------------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. Addition---------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Subtraction-----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. Subtraction------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Multiplication--------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. Multiplication---------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Multiply Acc----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. Multiply Acc-----------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Multiplication---------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. High Multiplication----------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Multiply Acc-----------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Uns. Multiply Acc.-----------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Division--------------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. Division---------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Remainder-------------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Uns. Remainder--------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Arithmetic Left Shift-------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Arithmetic Right Shift------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Arithmetic Left Shift--------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Arithmetic Right Shift-------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|

    [A] (...) Logical Left Shift----------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Logical Right Shift---------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Logical Left Shift-----------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) High Logical Right Shift----------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
    [A] (...) Left Rotate-----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Right Rotate----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Bit Reversal----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
    [A] (...) Bitwise AND-----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Bitwise NAND----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Bitwise OR------------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Bitwise NOR-----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Bitwise XOR-----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
	[A] (...) Bitwise XNOR----------------------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|
    [A] (...) Carry less Multiplication---------(?????) |OPCODE(13)|MOD(04)|RD(05)|RS1(05)|RS2(05)|

    [B] (...) I .Addition-----------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I .Uns. Addition------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I .Subtraction--------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I .Uns. Subtraction---------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Multiplication-----------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Uns. Multiplication------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. High Multiplication------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Uns. High Multiplication-------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Multiply Acc-------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Uns. Multiply Acc--------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. High Multiply Acc--------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. High Uns. Multiply Acc.--------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Division-----------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Uns. Division------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Remainder----------------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
	[B] (...) I. Uns. Remainder-----------------(?????) |OPCODE(08)|MOD(04)|RD(05)|RS1(05)|LEN(02)|IMM(08/24/40)|
