
ALU OPCODES:

    |opcode(5)|sign(1)|fp(1)|vector(2)|

    NOTE: not all possible combinations make sense / are allowed
    the CU must generate valid combinations only (obviously)

    00000 s f vv -> addition
    00001 s f vv -> subtraction
    00010 s f vv -> multiplication
    00011 s f vv -> multiply accumulate
    00100 s f vv -> division
    00101 s f vv -> remainder

    00110 s 0 vv -> addition carry
    00111 s 0 vv -> subtraction carry
    01000 s 0 vv -> high multiplication
    01001 s 0 vv -> high multiply accumulate

    01010 s 1 vv -> fp power
    01011 s 1 vv -> fp sin
    01100 s 1 vv -> fp cos
    01101 s 1 vv -> fp arcsin
    01110 s 1 vv -> fp arccos
    01111 x x xx -> //
    10000 x x xx -> 
    10001 x x xx -> 

    ...

________________________________________________________________________________________________________________________________

7 bit opcodes:

{ 2 entries, 8 opcodes

    [D]   (MLD)---Memory Load----------------------------------------------OPCODE: 00000 (00)
    [D.l] (LMLD)--Long Memory Load-----------------------------------------OPCODE: 00000 (01)
    [D]   (VMLD)--Vector Memory Load---------------------------------------OPCODE: 00000 (10)
    [D.l] (VLMLD)-Vector Long Memory Load----------------------------------OPCODE: 00000 (11)

    [D]   (MST)---Memory Store---------------------------------------------OPCODE: 00001 (00)
    [D.l] (LMST)--Long Memory Store----------------------------------------OPCODE: 00001 (01)
    [D]   (VMST)--Vector Memory Store--------------------------------------OPCODE: 00001 (10)
    [D.l] (VLMST)-Vector Long Memory Store---------------------------------OPCODE: 00001 (11)
}

{ 2 entries, 8 opcodes
    
    [E]   (IMLD)---Indexed Memory Load-------------------------------------OPCODE: 00010 (00)
    [E.l] (LIMLD)--Long Indexed Memory Load--------------------------------OPCODE: 00010 (01)
    [E]   (VIMLD)--Vector Indexed Memory Load------------------------------OPCODE: 00010 (10)
    [E.l] (VLIMLD)-Vector Long Indexed Memory Load-------------------------OPCODE: 00010 (11)

    [E]   (IMST)---Indexed Memory Store------------------------------------OPCODE: 00011 (00)
    [E.l] (LIMST)--Long Indexed Memory Store-------------------------------OPCODE: 00011 (01)
    [E]   (VIMST)--Vector Indexed Memory Store-----------------------------OPCODE: 00011 (10)
    [E.l] (VLIMST)-Vector Long Indexed Memory Store------------------------OPCODE: 00011 (11)
}

{ 2 entries, 4 opcodes
    
    [F]   (RIMLD)--Register Indexed Memory Load----------------------------OPCODE: 001000 (0)
    [F]   (VRIMLD)-Vector Register Indexed Memory Load---------------------OPCODE: 001000 (1)

    [F]   (RIMST)--Register Indexed Memory Store---------------------------OPCODE: 001001 (0)
    [F]   (VRIMST)-Vector Register Indexed Memory Store--------------------OPCODE: 001001 (1)
}

{ 1 entry, 2 opcodes
    
    [J]   (CAL)---Function Call--------------------------------------------OPCODE: 001010 (0)
    [J.l] (LCAL)--Long Function Call---------------------------------------OPCODE: 001010 (1)
}

{ 1 entry, 2 opcodes
    
    [K]   (RCAL)--Register Function Call-----------------------------------OPCODE: 001011 (0)
    [K.l] (LRCAL)-Long Register Function Call------------------------------OPCODE: 001011 (1)
}

{ ? entries, 24 opcodes
    
    [N] ...
}

{ ? entries, 5 opcodes
    
    [O] (BPTRG)-Breakpoint Trigger---------------------------------------OPCODE:
    [O] (SYSCL)-System Call----------------------------------------------OPCODE:
  * [O] (WINT)--Wait For Interrupt---------------------------------------OPCODE:

    [O] (CCAL) Branch If Zero Flag
    [O] (CCAL) Compressed Function Call
}

7 remaining
________________________________________________________________________________________________________________________________

8 bit opcodes:

{ 2 entries, 4 opcodes
    
    [G]   (BLD)-Block Load-------------------------------------------------OPCODE: 0111100 (0)
    [G.l] (BLD)-Long Block Load--------------------------------------------OPCODE: 0111100 (1)
    
    [G]   (BST)-Block Store------------------------------------------------OPCODE: 0111101 (0)
    [G.l] (BST)-Long Block Store-------------------------------------------OPCODE: 0111101 (1)
}

{ 2 entries, 4 opcodes
    
    [G] (BTST)--Branch If Test---------------------------------------------OPCODE: 0111110 (0)
    [G] (FBTST)-FP. Branch If Test-----------------------------------------OPCODE: 0111110 (1)
    //long
}

{ 2 entries, 4 opcodes
    
    [G] (BAF)--Branch If Arithmetic Flag-----------------------------------OPCODE: 0111111 (0)
    [G] (BSF)--Branch If System Flag---------------------------------------OPCODE: 0111111 (1)
    //long
}

{ 2 entries, 16 opcodes
    
    [H] (BEQ)---Branch If Equal--------------------------------------------OPCODE: 10000 (000)
    [H] (LBEQ)--Long Branch If Equal---------------------------------------OPCODE: 10000 (001)
    [H] (BNE)---Branch If Not Equal----------------------------------------OPCODE: 10000 (010)
    [H] (LBNE)--Long Branch If Not Equal-----------------------------------OPCODE: 10000 (011)
    [H] (BLT)---Branch If Less Than----------------------------------------OPCODE: 10000 (100)
    [H] (LBLT)--Long Branch If Less Than-----------------------------------OPCODE: 10000 (101)
    [H] (BLE)---Branch If Less Equal---------------------------------------OPCODE: 10000 (110)
    [H] (LBLE)--Long Branch If Less Equal----------------------------------OPCODE: 10000 (111)

    [H] (FBEQ)--Floating point Branch If Equal-----------------------------OPCODE: 10001 (000)
    [H] (LFBEQ)-Long Floating point Branch If Equal------------------------OPCODE: 10001 (001)
    [H] (FBNE)--Floating point Branch If Not Equal-------------------------OPCODE: 10001 (010)
    [H] (LFBNE)-Long Floating point Branch If Not Equal--------------------OPCODE: 10001 (011)
    [H] (FBLT)--Floating point Branch If Less Than-------------------------OPCODE: 10001 (100)
    [H] (LFBLT)-Long Floating point Branch If Less Than--------------------OPCODE: 10001 (101)
    [H] (FBLE)--Floating point Branch If Less Equal------------------------OPCODE: 10001 (110)
    [H] (LFBLE)-Long Floating point Branch If Less Equal-------------------OPCODE: 10001 (111)
}

{ 2 entries, 8 opcodes
    
    [H] (UBLT)---Unsigned Branch If Less Than------------------------------OPCODE: 100100 (00)
    [H] (LUBLT)--Long Unsigned Branch If Less Than-------------------------OPCODE: 100100 (01)
    [H] (UBLE)---Unsigned Branch If Less Equal-----------------------------OPCODE: 100100 (10)
    [H] (LUBLE)--Long Unsigned Branch If Less Equal------------------------OPCODE: 100100 (11)

    [H] (FUBLT)--Floating point Unsigned Branch If Less Than---------------OPCODE: 100101 (00)
    [H] (LFUBLT)-Long Floating point Unsigned Branch If Less Than----------OPCODE: 100101 (01)
    [H] (FUBLE)--Floating point Unsigned Branch If Less Equal--------------OPCODE: 100101 (10)
    [H] (LFUBLE)-Long Floating point Unsigned Branch If Less Equal---------OPCODE: 100101 (11)
}

{

    [M]...
}

28 remaining
________________________________________________________________________________________________________________________________

10 bit opcodes:

    ...

________________________________________________________________________________________________________________________________

11 bit opcodes:

    [P] (NOP)---No Operation---------------------------------------------OPCODE:

  * [P] (CACOP)-Cache Operation------------------------------------------OPCODE:
  * [P] (MMUOP)-MMU Operation--------------------------------------------OPCODE:

    [P] (FNCL)--Fence Loads----------------------------------------------OPCODE:
    [P] (FNCS)--Fence Stores---------------------------------------------OPCODE:
    [P] (FNCLS)-Fence Loads and Stores-----------------------------------OPCODE:

  * [P] (ERET)--Event Return---------------------------------------------OPCODE:

  * [P] (SDMP)--State Dump-----------------------------------------------OPCODE:
  * [P] (SRST)--State Restore--------------------------------------------OPCODE:

________________________________________________________________________________________________________________________________

13 bit opcodes:

    ...

________________________________________________________________________________________________________________________________

16 bit opcodes:

    ...

________________________________________________________________________________________________________________________________